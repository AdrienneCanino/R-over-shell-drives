sum(str_count(a, "16BitChannel9"))
sum(str_count(a, "AMAR219.1.16000.M8EV35dB"))
5988+192+7154
#how to get the file paths I want from this process?
str_locate(df_wavs81, a[1])
#how to get the file paths I want from this process?
?str_locate_all
str_locate(df_wavs81$file_path, "WN40")
str_which(df_wavs81$file_path, "WN40")
#get the index numbers where WN40 is present,
wn40_index <-  str_which(df_wavs81$file_path, "WN40")
Bit9_index <-  str_which(df_wavs81$file_path, "16BitChannel9")
amar219yada_index <-  str_which(df_wavs81$file_path, "AMAR219.1.16000.M8EV35dB")
str_extract(df_wavs81$file_path, "WN40")
str_extract_all(df_wavs81$file_path, "WN40")
str_subset(df_wavs81$file_path, "WN40")
#OK. Cool. Wait, would extract do that better? Nope, subset, and I need to put it so it's the folder, and not the WAV files
?regex
amar219yada_filepaths <-  str_subset(df_wavs81$file_path, "AMAR219.1.16000.M8EV35dB")
wn40_index ==  wn40_filepaths
wn40_filepaths <-  str_subset(df_wavs81$file_path, "WN40")
Bit9_filepaths <-  str_subset(df_wavs81$file_path, "16BitChannel9")
amar219yada_filepaths <-  str_subset(df_wavs81$file_path, "AMAR219.1.16000.M8EV35dB")
wn40_index ==  wn40_filepaths
#ok, cool.
#how about, THE file path?
head(wn40_filepaths)
#how do I know, that, these file paths are all in chukchi/2009-overwinter ?
str_detect(wn40_filepaths, "mnt/shell/ax81/shell/chukchi/2009-overwinter/WN40")
#logical returned, how to make that a usefule return....
count %>%
str_detect(wn40_filepaths, "mnt/shell/ax81/shell/chukchi/2009-overwinter/WN40")
#logical returned, how to make that a usefule return....
count %>%
str_detect(wn40_filepaths, regex("mnt/shell/ax81/shell/chukchi/2009-overwinter/WN40"))
#how do I know, that, these file paths are all in chukchi/2009-overwinter ?
str_detect(wn40_filepaths, "mnt/shell/ax81/shell/chukchi/2009-overwinter/WN40")
#logical returned, how to make that a usefule return....
sum %>%
str_detect(wn40_filepaths, regex("mnt/shell/ax81/shell/chukchi/2009-overwinter/WN40"))
#doesn't like the pipe?
?str_detect
#logical returned, how to make that a usefule return....
sum %>%
str_detect(wn40_filepaths, negate=F, regex("mnt/shell/ax81/shell/chukchi/2009-overwinter/WN40"))
#logical returned, how to make that a usefule return....
sum %>%
str_detect(wn40_filepaths, "mnt/shell/ax81/shell/chukchi/2009-overwinter/WN40", negate=F)
#logical returned, how to make that a usefule return....
sum(str_detect(wn40_filepaths, "mnt/shell/ax81/shell/chukchi/2009-overwinter/WN40", negate=F))
#logical returned, how to make that a usefule return....
sum(str_detect(wn40_filepaths, "mnt/shell/ax81/shell/chukchi/2009-overwinter/WN40"))
#5988, so yes all of them are in the chukchi/2009-overwinter folder
#5988, so yes all of them are in the chukchi/2009-overwinter folder
#5988, so yes all of them are in the chukchi/2009-overwinter folder
#5988, so yes all of them are in the chukchi/2009-overwinter folder
header <- c("drive", "instrument-name", "start-year", "stationID", "recorderID", "lat", "long", "file-type","file-count","total-volume","preserve-decision")
curation_df <- as_data_frame(header, )
curation_df
?data.frame
curation_df <- c(header,)
?tibble
curation_df <- tibble()
colnames(curation_df, header)
?colnames
colnames(curation_df) <- header
curation_df
?tibble
curation_df <- data.frame(matrix(ncol=11, nrow=0))
colnames(curation_df) <- header
curation_df
curation_df <- tibble(matrix(ncol=11, nrow=0))
colnames(curation_df) <- header
curation_df
curation_df <- tibble()
colnames(curation_df) <- header
curation_df
colnames(curation_df) <- header
curation_df$drive = "ax81"
colnames(curation_df) <- header
curation_df <- data.frame(matrix(nrow=0, ncol=length(header)))
colnames(curation_df) <- header
curation_df
curation_df$drive = "ax81"
curation_df <- data.frame(matrix(nrow=10, ncol=length(header)))
colnames(curation_df) <- header
curation_df
curation_df$drive = "ax81"
curation_df$drive == "ax81"
View(curation_df)
View(curation_df)
curation_df$file-path == "mnt/shell/ax81/shell/chukchi/2009-overwinter/WN40"
curation_df$"file-path" == "mnt/shell/ax81/shell/chukchi/2009-overwinter/WN40"
curation_df$file-path == "mnt/shell/ax81/shell/chukchi/2009-overwinter/WN40"
View(curation_df)
View(curation_df)
header <- c("drive","file-path", "instrument-name", "start-year", "stationID", "recorderID", "lat", "long", "file-type","file-count","total-volume","preserve-decision")
curation_df <- data.frame(matrix(nrow=10, ncol=length(header)))
colnames(curation_df) <- header
curation_df
curation_df$drive == "ax81"
curation_df$drive == "ax81"
curation_df$file-path == "mnt/shell/ax81/shell/chukchi/2009-overwinter/WN40"
curation_df$drive = "ax81"
curation_df$drive == "ax81"
curation_df$file-path = "mnt/shell/ax81/shell/chukchi/2009-overwinter/WN40"
curation_df$`file-path` <- "mnt/shell/ax81/shell/chukchi/2009-overwinter/WN40"
curation_df$`file-count` <- 5988
curation_df$`start-year` <-  2009
amar219yada_filepaths[1]
View(curation_df)
View(curation_df)
curation_df <- curation_df[-c(2:10)]
newRow <- data.frame(drive = "ax81", `file-path`="mnt/shell/ax81/fw/chukchi/2013-overwinter/CL05/stitiched wavs/AMAR219.1.16000.M8EV35dB/", `file-count`=7154, `start-year`=2013)
curation_df <- rbind(curation_df, newRow )
newRow <- data.frame(drive = "ax81", `file-path`="mnt/shell/ax81/fw/chukchi/2013-overwinter/CL05/stitiched wavs/AMAR219.1.16000.M8EV35dB/", `file-count`=7154, `start-year`=2013, "instrument-name", "stationID", "recorderID", "lat", "long", "file-type","total-volume","preserve-decision")
curation_df <- rbind(curation_df, newRow )
View(curation_df)
curation_df <- data.frame(matrix(nrow=10, ncol=length(header)))
colnames(curation_df) <- header
curation_df$drive == "ax81"
curation_df$`file-path` <- "mnt/shell/ax81/shell/chukchi/2009-overwinter/WN40"
curation_df$`file-count` <- 5988
curation_df$`start-year` <-  2009
curation_df <- curation_df[-c(2:10)]
View(curation_df)
curation_df <- data.frame(matrix(nrow=10, ncol=length(header)))
colnames(curation_df) <- header
curation_df
curation_df$drive == "ax81"
curation_df$`file-path` <- "mnt/shell/ax81/shell/chukchi/2009-overwinter/WN40"
curation_df$`file-count` <- 5988
curation_df$`start-year` <-  2009
curation_df <- curation_df[-c(2:10,)]
newRow <- data.frame(drive = "ax81", `file-path`="mnt/shell/ax81/fw/chukchi/2013-overwinter/CL05/stitiched wavs/AMAR219.1.16000.M8EV35dB/", `file-count`=7154, `start-year`=2013, "instrument-name", "stationID", "recorderID", "lat", "long", "file-type","total-volume","preserve-decision")
curation_df <- rbind(curation_df, newRow )
curation_df <- curation_df[-c(2:10,*)]
curation_df <- curation_df[-c(2:10,)]
curation_df <- curation_df[-c(,2:10)]
curation_df <- curation_df[-c(2:10)]
#how can I get the volume of files reported to me? In.... this dataframe?
install.packages("fs")
library("fs")
?fs
dir_ls()
library(tidytext)
library(package)
install.packages("tidytext")
library(tidytext)
?unnest_tokens
?tidytext
browseVignettes(package = "tidytext")
df_AX81 <- read_delim("Documents/new.invs/shell.ax81", '/', escape_backslash=FALSE, col_names = columnNames)
library(readr)
library("readr")
df_AX81 <- read_delim("Documents/new.invs/shell.ax81", '/', escape_backslash=FALSE, col_names = columnNames)
columnNames = c("path","directory","subdirectory1", "subdirectory2","subdirectory3","subdirectory4","subdirectory5","subdirectory6","subdirectory7","subdirectory8","subdirectory9","subdirectory10" )
df_AX81 <- read_delim("Documents/new.invs/shell.ax81", '/', escape_backslash=FALSE, col_names = columnNames)
?readr
text <- read_lines("Documents/new.invs/shell.ax81")
text <- tibble(text=text)
library("tidyverse")
text <- tibble(text=text)
head(text)
?unnest_tokens
text <- read_lines("Documents/new.invs/shell.ax81")
text_df <- tibble(text=text)
head(text_df)
#ok first make the object holding the index values
csvs_index81 <-c(2010, 2027, 2044, 2061, 2078, 2095, 2112, 2112, 2129, 8150, 8243, 8251, 8259, 8267, 8275, 8283, 8291)
df_csvs81 <- df_ax81[csvs_index81,]
df_ax81 <- unite(df_AX81, col = "file_path", 1:12, remove = FALSE, na.rm = T, sep = "/")
df_csvs81 <- df_ax81[csvs_index81,]
df_csvs81
for (i in 1:dim(df2)[1]){
penult <- str_which(df2[i,], regex(".csv$", ignore_case = TRUE)) #find the wav file
targetFolderIndex <-  penult-1 #look one before it to get the index number of the target folder
#print(r[targetFolderIndex]) #print the value in the targetFolder cell
tf <- df[[i,targetFolderIndex]] #assign that value (and only the value) to a temp object
x <- append(x, tf) #put it in the empty list I started
}
#And, now the same for CSVs
df2 <- df_csvs81[,2:13]
x =c()
for (i in 1:dim(df2)[1]){
penult <- str_which(df2[i,], regex(".csv$", ignore_case = TRUE)) #find the wav file
targetFolderIndex <-  penult-1 #look one before it to get the index number of the target folder
#print(r[targetFolderIndex]) #print the value in the targetFolder cell
tf <- df[[i,targetFolderIndex]] #assign that value (and only the value) to a temp object
x <- append(x, tf) #put it in the empty list I started
}
for (i in 1:dim(df2)[1]){
penult <- str_which(df2[i,], regex(".csv$", ignore_case = TRUE)) #find the wav file
targetFolderIndex <-  penult-1 #look one before it to get the index number of the target folder
#print(r[targetFolderIndex]) #print the value in the targetFolder cell
tf <- df2[[i,targetFolderIndex]] #assign that value (and only the value hence doubl []) to a temp object
x <- append(x, tf) #put it in the empty list I started
}
head(x)
unique(x)
deployment_filepaths %>%
str_subset(df_csvs81$file_path, "2009-overwinter") %>%
str_subset(df_csvs81$file_path, "2014-summer") %>%
str_subset(df_csvs81$file_path, "2013-overwinter") %>%
View(text_df)
deployment_filepaths %>%
str_subset(df_csvs81$file_path, "2009-overwinter") %>%
str_subset(df_csvs81$file_path, "2014-summer") %>%
str_subset(df_csvs81$file_path, "2013-overwinter")
#"2009-overwinter" "2014-summer"     "2013-overwinter"
#which makes perfect sense
pattern <-  c("2009-overwinter","2014-summer","2013-overwinter")
for(thing in pattern){
deployment_filepaths <- append(deployment_filepaths, str_subset(df_csvs81$file_path,thing))
}
deployment_filepaths <- tibble()
for(thing in pattern){
deployment_filepaths <- append(deployment_filepaths, str_subset(df_csvs81$file_path,thing))
}
deployment_filepaths
deployment_filepaths <- append(deployment_filepaths, as.character(str_subset(df_csvs81$file_path,thing)))
deployment_filepaths
wn40_filepaths <-  str_subset(df_wavs81$file_path, "WN40")
sum(str_count(a, "WN40")) #5988
unique(deployment_filepaths)
sum(str_detect(deployment_filepaths, "mnt/shell/ax81/shell/chukchi/2009-overwinter/deploymentInfo.csv"))
#why is this 9? This file path got identified, 9 times, in the dataframe that subset for files ending in csv
sum(str_detect(deployment_filepaths, "mnt/shell/ax81/fw/chukchi/2014-summer/deploymentInfo.csv"))
#1, that was the expected answer
sum(str_detect(deployment_filepaths, "mnt/shell/ax81/fw/chukchi/2013-overwinter/deploymentInfo.csv"))
#                            # grep sometimes seems to return duplicates though, so the second part is to try and address that. I think it would work.
getqd()
getwd()
setwd("/home/adrienne/documents/R-over-shell-drives")
?setwd()
setwd("\home\adrienne\documents\R-over-shell-drives")
setwd("~/home/adrienne/documents/R-over-shell-drives")
# # create a dataframe of deployments on drives, modelled on the deploymentInfo.csv from ax70.
#
# drive.deploy = pd.read_csv("deploymentInfo.csv", names =[drive, recorderId, recorderMake, recorderVersion, stationId, hydrophoneId, hydrophoneMake, sampleRate, channels, bitsPerSample, fileStructure, startDate, startTime, driveNo, latitude, longitude, meters, dropDate, dropTime, recoveryDate, recoveryTime, vPerBit, sensitivity, sensitivityFrequencyPoint, Calibrations for Frequency Points, file volume, file name, file path, preserve]
#in R:
drive81Deploys <- read.table("./CSV-copied/deploymentInfo-OV2013.csv", delim=",", HEADER=FALSE)
# # create a dataframe of deployments on drives, modelled on the deploymentInfo.csv from ax70.
#
# drive.deploy = pd.read_csv("deploymentInfo.csv", names =[drive, recorderId, recorderMake, recorderVersion, stationId, hydrophoneId, hydrophoneMake, sampleRate, channels, bitsPerSample, fileStructure, startDate, startTime, driveNo, latitude, longitude, meters, dropDate, dropTime, recoveryDate, recoveryTime, vPerBit, sensitivity, sensitivityFrequencyPoint, Calibrations for Frequency Points, file volume, file name, file path, preserve]
#in R:
?read.table()
# # create a dataframe of deployments on drives, modelled on the deploymentInfo.csv from ax70.
#
# drive.deploy = pd.read_csv("deploymentInfo.csv", names =[drive, recorderId, recorderMake, recorderVersion, stationId, hydrophoneId, hydrophoneMake, sampleRate, channels, bitsPerSample, fileStructure, startDate, startTime, driveNo, latitude, longitude, meters, dropDate, dropTime, recoveryDate, recoveryTime, vPerBit, sensitivity, sensitivityFrequencyPoint, Calibrations for Frequency Points, file volume, file name, file path, preserve]
#in R:
?read.table()
drive81Deploys <- read.table("./CSV-copied/deploymentInfo-OV2013.csv", header=F, sep=",", col.names=[c(drive, recorderId, recorderMake, recorderVersion, stationId, hydrophoneId, hydrophoneMake, sampleRate, channels, bitsPerSample, fileStructure, startDate, startTime, driveNo, latitude, longitude, meters, dropDate, dropTime, recoveryDate, recoveryTime, vPerBit, sensitivity, sensitivityFrequencyPoint, Calibrations for Frequency Points, file volume, file name, file path, preserve)
])
# # create a dataframe of deployments on drives, modelled on the deploymentInfo.csv from ax70.
#
# drive.deploy = pd.read_csv("deploymentInfo.csv", names =[drive, recorderId, recorderMake, recorderVersion, stationId, hydrophoneId, hydrophoneMake, sampleRate, channels, bitsPerSample, fileStructure, startDate, startTime, driveNo, latitude, longitude, meters, dropDate, dropTime, recoveryDate, recoveryTime, vPerBit, sensitivity, sensitivityFrequencyPoint, Calibrations for Frequency Points, file volume, file name, file path, preserve])
#in R:
deployCol <- as.character(c([drive, recorderId, recorderMake, recorderVersion, stationId, hydrophoneId, hydrophoneMake, sampleRate, channels, bitsPerSample, fileStructure, startDate, startTime, driveNo, latitude, longitude, meters, dropDate, dropTime, recoveryDate, recoveryTime, vPerBit, sensitivity, sensitivityFrequencyPoint, Calibrations for Frequency Points, file volume, file name, file path, preserve])
# # create a dataframe of deployments on drives, modelled on the deploymentInfo.csv from ax70.
#
# drive.deploy = pd.read_csv("deploymentInfo.csv", names =[drive, recorderId, recorderMake, recorderVersion, stationId, hydrophoneId, hydrophoneMake, sampleRate, channels, bitsPerSample, fileStructure, startDate, startTime, driveNo, latitude, longitude, meters, dropDate, dropTime, recoveryDate, recoveryTime, vPerBit, sensitivity, sensitivityFrequencyPoint, Calibrations for Frequency Points, file volume, file name, file path, preserve])
#in R:
deployCol <- as.character(c(drive, recorderId, recorderMake, recorderVersion, stationId, hydrophoneId, hydrophoneMake, sampleRate, channels, bitsPerSample, fileStructure, startDate, startTime, driveNo, latitude, longitude, meters, dropDate, dropTime, recoveryDate, recoveryTime, vPerBit, sensitivity, sensitivityFrequencyPoint, Calibrations for Frequency Points, file volume, file name, file path, preserve))
# # create a dataframe of deployments on drives, modelled on the deploymentInfo.csv from ax70.
#
# drive.deploy = pd.read_csv("deploymentInfo.csv", names =[drive, recorderId, recorderMake, recorderVersion, stationId, hydrophoneId, hydrophoneMake, sampleRate, channels, bitsPerSample, fileStructure, startDate, startTime, driveNo, latitude, longitude, meters, dropDate, dropTime, recoveryDate, recoveryTime, vPerBit, sensitivity, sensitivityFrequencyPoint, Calibrations for Frequency Points, file volume, file name, file path, preserve])
#in R:
deployCol <- as.character(c(drive, recorderId, recorderMake, recorderVersion, stationId, hydrophoneId, hydrophoneMake, sampleRate, channels, bitsPerSample, fileStructure, startDate, startTime, driveNo, latitude, longitude, meters, dropDate, dropTime, recoveryDate, recoveryTime, vPerBit, sensitivity, sensitivityFrequencyPoint, CalibrationsFrequency Points, file volume, file name, file path, preserve))
# # create a dataframe of deployments on drives, modelled on the deploymentInfo.csv from ax70.
#
# drive.deploy = pd.read_csv("deploymentInfo.csv", names =[drive, recorderId, recorderMake, recorderVersion, stationId, hydrophoneId, hydrophoneMake, sampleRate, channels, bitsPerSample, fileStructure, startDate, startTime, driveNo, latitude, longitude, meters, dropDate, dropTime, recoveryDate, recoveryTime, vPerBit, sensitivity, sensitivityFrequencyPoint, Calibrations for Frequency Points, file volume, file name, file path, preserve])
#in R:
deployCol <- as.character(c("drive", "recorderId", "recorderMake", "recorderVersion", "stationId", "hydrophoneId", "hydrophoneMake", "sampleRate", "channels", "bitsPerSample", "fileStructure", "startDate", "startTime", "driveNo", "latitude", "longitude", "meters", "dropDate", "dropTime", "recoveryDate", "recoveryTime", "vPerBit", "sensitivity", "sensitivityFrequencyPoint", "CalibrationsFrequency Points", "file volume", "file name", "file path", "preserve"))
drive81Deploys <- read.table("./CSV-copied/deploymentInfo-OV2013.csv", header=F, sep=",", col.names=deployCol, fill=T)
drive81Deploys <- read.table("~/CSV-copied/deploymentInfo-OV2013.csv", header=F, sep=",", col.names=deployCol, fill=T)
drive81Deploys <- read.table("~/Documents/R-over-shell-drives/CSV-copied/deploymentInfo-OV2013.csv", header=F, sep=",", col.names=deployCol, fill=T)
head(drive81Deploys)
drive81Deploys <- read.table("~/Documents/R-over-shell-drives/CSV-copied/deploymentInfo-OV2013.csv", header=F, sep=",", fill=T)
head(drive81Deploys)
view(drive81Deploys)
?view
# Load up data wrangling environment
#I always want tidyverse? Yea, I always want tidyverse.
#install.packages('tidyverse')
library("tidyverse")
view(drive81Deploys)
#that didn't work, it's missing the key few rows that are the best functional header in this spreadsheet
view("~/Documents/R-over-shell-drives/CSV-copied/deploymentInfo-OV2013.csv")
drive81Deploys <- read.table("~/Documents/R-over-shell-drives/CSV-copied/deploymentInfo-OV2013.csv", header=F, sep=",", fill=T, na.strings="#")
view(drive81Deploys)
drive81Deploys <- read.table("~/Documents/R-over-shell-drives/CSV-copied/deploymentInfo-OV2013.csv", header=F, sep=",", fill=T, na.strings="#", blank.lines.skip = FALSE)
view(drive81Deploys)
drive81Deploys <- read.table("~/Documents/R-over-shell-drives/CSV-copied/deploymentInfo-OV2013.csv",
header=F, sep=",", na.strings="#",
blank.lines.skip = FALSE)
view(drive81Deploys)
view(drive81Deploys)
drive81Deploys <- read.table("~/Documents/R-over-shell-drives/CSV-copied/deploymentInfo-OV2013.csv",
header=F, sep=",", #na.strings="#",
blank.lines.skip = FALSE)
view(drive81Deploys)
drive81Deploys <- read.table("~/Documents/R-over-shell-drives/CSV-copied/deploymentInfo-OV2013.csv",
header=F, sep=",")
view(drive81Deploys)
drive81Deploys <- read.table("~/Documents/R-over-shell-drives/CSV-copied/deploymentInfo-OV2013.csv",
header=F, sep=","
blank.lines.skip = FALSE,
stringsAsFactors=F)
drive81Deploys <- read.table("~/Documents/R-over-shell-drives/CSV-copied/deploymentInfo-OV2013.csv",
header=F, sep=","
blank.lines.skip = FALSE,
stringsAsFactors=FALSE)
drive81Deploys <- read.table("~/Documents/R-over-shell-drives/CSV-copied/deploymentInfo-OV2013.csv",
header=F, sep="," ,
blank.lines.skip = FALSE,
stringsAsFactors=FALSE)
view(drive81Deploys)
drive81Deploys <- read.table("~/Documents/R-over-shell-drives/CSV-copied/deploymentInfo-OV2013.csv",
header=F, sep="," ,
blank.lines.skip = FALSE, comment.char="")
view(drive81Deploys)
View(df_wavs81)
View(df_wavs81)
summarise(df_AX81$subdirectory3)
df_AX81 %>%
group_by(subdirectory3)
df_ax81 %>%
group_by(subdirectory4) %>%
summarise(n=n()) %>%
view()
df_wavs81 %>%
group_by(subdirectory3) %>%
summarise(n=n()) %>%
view()
df_wavs81 %>%
filter(subdirectory3 == "fw") %>%
group_by(subdirectory4) %>%
view()
#make each column factor
df_wavs81 %>%
mutate_if(is.character,funs(factor(.)))
#group by subdirectory5, aonly in "fw" subdirectory3, and count
df_wavs81 %>%
filter(subdirectory3 == "fw") %>%
group_by(subdirectory5) %>%
summarise(n=n())
#Or, check if I still have my environment
df_wavs81
View(drive81Deploys)
View(drive81Deploys)
View(drive81Deploys)
View(drive81Deploys)
#make a clean deployment dataframe
clean81deploy <- drive81Deploys[[2:71,6:13]]
#make a clean deployment dataframe
clean81deploy <- drive81Deploys[2:71,6:13]
view(clean81deploy)
#make a clean deployment dataframe
clean81deploy <- drive81Deploys[6:13,2:71]
view(clean81deploy)
View(drive81Deploys)
freqpoints <- drive81Deploys[5,2:71]
head(freqpoints)
freqpoints <- drive81Deploys[5,2:49]
head(freqpoints)
freqpoints <- drive81Deploys[5,2:48]
head(freqpoints)
view(clean81deploy)
x <- clean81deploy[1,1:24]
x <- c(x,freqpoints)
x
?colnames
colnames(clean81deploy, x)
colnames(clean81deploy) <- x
colnames(clean81deploy)
x <- clean81deploy[1,1:25]
x
x <- clean81deploy[1,1:23]
x
x <- c(x,freqpoints)
colnames(clean81deploy) <-x
#look at it?
clean81deploy
View(clean81deploy)
View(clean81deploy)
#look at it?
clean81deploy[-1,]
clean81deploy[clientID]== "fw"
clean81deploy[clientID] == "fw"
clean81deploy[[clientID] == "fw"
clean81deploy[[clientID] = "fw"
clean81deploy$clientID == "fw"
clean81deploy$region == "Chuckchi"
clean81deploy$season == "2013 overwinter"
clean81deploy
#look at it? it had two headders
clean81deploy[-2,]
#make a clean deployment dataframe
clean81deploy <- drive81Deploys[6:13,2:71]
view(clean81deploy)
colnames(clean81deploy) <-x
clean81deploy$clientID == "fw"
clean81deploy$region == "Chuckchi"
clean81deploy$season == "2013 overwinter"
clean81deploy
#look at it? it had two headders
clean81deploy[-1,]
clean81deploy$clientID <-  "fw"
clean81deploy$region <-  "Chuckchi"
clean81deploy$season <- "2013 overwinter"
clean81deploy
curatedf <- as.dataframe()
curatedf = data.frame()
recorderID=clean81deploy$recorderId[1]
clean81deploy[-1,]
recorderID=clean81deploy$recorderId[1]
recorderID=clean81deploy$recorderId[1]
recorderID <- clean81deploy$recorderId[1]
clean81deploy <- as.dataframe(clean81deploy[-1,])
clean81deploy <- as_dataframe(clean81deploy[-1,])
clean81deploy <- as.data.frame(clean81deploy[-1,])
recorderID <- clean81deploy$recorderId[1]
stationID <-  clean81deploy$stationId[1]
str_locate(df_wavs81, regex(recorderID & stationID, ignore_case = TRUE))
str_which(df_wavs81, regex(pattern=recorderID & stationID, ignore_case = TRUE))
str_which(df_wavs81, regex(pattern=recorderID, ignore_case = TRUE))
str_which(df_wavs81, regex(pattern=as.string(recorderID), ignore_case = TRUE))
str_which(df_wavs81, regex(pattern=as.character(recorderID), ignore_case = TRUE))
recorderID
str_which(df_wavs81, regex(pattern=recorderID, ignore_case = TRUE))
str_look(df_wavs81, regex(pattern=recorderID, ignore_case = TRUE))
str_which(df_wavs81[1], regex(pattern=recorderID & stationID, ignore_case = TRUE))
str_which(df_wavs81[1], regex(pattern=recorderID && stationID, ignore_case = TRUE))
?regex
pattern = recorderID & stationID
pattern <- recorderID & stationID
pattern <- recorderID && stationID
pattern <- as.character(recorderID) && as.character(stationID)
str_which(df_wavs81[1], regex(pattern=recorderID, ignore_case = TRUE))
str_which(df_wavs81[1,], regex(pattern=recorderID, ignore_case = TRUE))
str_which(df_wavs81[,1], regex(pattern=recorderID, ignore_case = TRUE))
#setup an empty dataframe
curatedf = data.frame()
recorderID <- clean81deploy$recorderId[1]
stationID <-  clean81deploy$stationId[1]
recorderID
deployDF <- NULL
#This works
drive81Deploys <- read.table("~/Documents/R-over-shell-drives/CSV-copied/deploymentInfo-OV2013.csv",
header=F, sep="," ,
blank.lines.skip = FALSE, comment.char="")
#make a clean deployment dataframe
clean81deploy <- drive81Deploys[6:13,2:71]
view(clean81deploy)
#with nice and useful col names
freqpoints <- drive81Deploys[5,2:48]
x <- clean81deploy[1,1:23]
x <- c(x,freqpoints)
x
print(freqpoints)
print(as.string(freqpoints))
print(as.list(freqpoints))
print(as.character(freqpoints))
?as.character(freqpoints, sep=",")
as.character(freqpoints, sep=",")
# # create a dataframe of deployments on drives, modelled on the deploymentInfo.csv from ax70.
#
# drive.deploy = pd.read_csv("deploymentInfo.csv", names =[drive, recorderId, recorderMake, recorderVersion, stationId, hydrophoneId, hydrophoneMake, sampleRate, channels, bitsPerSample, fileStructure, startDate, startTime, driveNo, latitude, longitude, meters, dropDate, dropTime, recoveryDate, recoveryTime, vPerBit, sensitivity, sensitivityFrequencyPoint, Calibrations for Frequency Points, file volume, file name, file path, preserve])
#in R:
deployCol <- as.character(c("recorderId", "recorderMake","recorderVersion","stationId","hydrophoneId","hydrophoneMake","sampleRate","channels","bitsPerSample","fileStructure","startDate","startTime","driveNo","latitude","longitude","meters","dropDate","dropTime","recoveryDate","recoveryTime","vPerBit","sensitivity","sensitivityFrequencyPoint","1.6","3.2","6.4","12.8","25.6","51.2","100","200","300","400","500","600","700","800","900","1000","1200","1300","1400","1500","2000","2500","3000","3500","4000","4500","5000","5500","6000","6500","7000","7500","8000","16000","32000","40000","50000","60000","70000","80000","90000","1e+05","120000","140000","160000","180000","2e+05"))
drive81Deploys[-5,]
view(drive81Deploys[-5,-1])
# Load up data wrangling environment
#I always want tidyverse? Yea, I always want tidyverse.
#install.packages('tidyverse')
library("tidyverse")
# Load up data wrangling environment
#I always want tidyverse? Yea, I always want tidyverse.
#install.packages('tidyverse')
library("tidyverse")
view(drive81Deploys[-5,-1])
view(drive81Deploys)
view(drive81Deploys[-6,-1])
view(drive81Deploys[-1:6,-1])
view(drive81Deploys[-c(1:6),-1])
view(clean81deploy)
for (f in "~/Documents/R-over-shell-drives/CSV-copied"){
dat <- read.table(f, header=F, sep=",",blank.lines.skip = FALSE, comment.char="") #read table
dat <- dat[-c(1:6),-1] #drop row weirdness
#seems like, there's not a good way right away to preserve the 3 values in that row weirdness
deployDF <- rbind(deployDF, dat)
}
files <- list.files("~/Documents/R-over-shell-drives/CSV-copied/", pattern="*.csv")
for (f in files){
dat <- read.table(f, header=F, sep=",",blank.lines.skip = FALSE, comment.char="") #read table
dat <- dat[-c(1:6),-1] #drop row weirdness
#seems like, there's not a good way right away to preserve the 3 values in that row weirdness
deployDF <- rbind(deployDF, dat)
}
getwd()
ls
setwd(.//)
getwd()
setwd("~/Documents/R-over-shell-drives/CSV-copied/")
for (f in files){
dat <- read.table(f, header=F, sep=",",blank.lines.skip = FALSE, comment.char="") #read table
dat <- dat[-c(1:6),-1] #drop row weirdness
#seems like, there's not a good way right away to preserve the 3 values in that row weirdness
deployDF <- rbind(deployDF, dat)
}
?colnames
